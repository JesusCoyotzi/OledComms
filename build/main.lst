ARM GAS  /tmp/ccyX6l7N.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB69:
  24              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "oled.h"
  26:Core/Src/main.c **** #include "raine64.h"
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
ARM GAS  /tmp/ccyX6l7N.s 			page 2


  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** #define buff_len COLS_PER_PAGE*PAGES_PER_SCREEN //128*4
  51:Core/Src/main.c **** uint8_t img_buffer[COLS_PER_PAGE*PAGES_PER_SCREEN];
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_I2C1_Init(void);
  58:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
ARM GAS  /tmp/ccyX6l7N.s 			page 3


  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_I2C1_Init();
  97:Core/Src/main.c ****   MX_USART1_UART_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart1, UART_IT_RXNE);
 100:Core/Src/main.c ****   initOled();
 101:Core/Src/main.c ****   // Set whole buffer as black
 102:Core/Src/main.c ****   for(int j=0; j < buff_len; j++)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     img_buffer[j]=0x00;
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   
 107:Core/Src/main.c ****   size_t line_len = 128;
 108:Core/Src/main.c ****   for(int k = 0 ; k<PAGES_PER_SCREEN; k++)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     memcpy(img_buffer+k*128,raine+k*line_len,line_len);
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c ****   write_data_oled(img_buffer,buff_len);
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     /* USER CODE END WHILE */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c ****   /* USER CODE END 3 */
 124:Core/Src/main.c **** }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /**
 127:Core/Src/main.c ****   * @brief System Clock Configuration
 128:Core/Src/main.c ****   * @retval None
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c **** void SystemClock_Config(void)
 131:Core/Src/main.c **** {
 132:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 136:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
 148:Core/Src/main.c ****   }
ARM GAS  /tmp/ccyX6l7N.s 			page 4


 149:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /**
 165:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 166:Core/Src/main.c ****   * @param None
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** static void MX_I2C1_Init(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 179:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 180:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 181:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 182:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 183:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 184:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 185:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 186:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 187:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 188:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief USART1 Initialization Function
 200:Core/Src/main.c ****   * @param None
 201:Core/Src/main.c ****   * @retval None
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 204:Core/Src/main.c **** {
 205:Core/Src/main.c **** 
ARM GAS  /tmp/ccyX6l7N.s 			page 5


 206:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 213:Core/Src/main.c ****   huart1.Instance = USART1;
 214:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 215:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 216:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 217:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 218:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 219:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 220:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 221:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief GPIO Initialization Function
 233:Core/Src/main.c ****   * @param None
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** static void MX_GPIO_Init(void)
 237:Core/Src/main.c **** {
  25              		.loc 1 237 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 16
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 84B0     		sub	sp, sp, #16
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              	.LBB4:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 240:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 240 0
  35 0002 0F4B     		ldr	r3, .L3
  36 0004 9A69     		ldr	r2, [r3, #24]
  37 0006 42F02002 		orr	r2, r2, #32
  38 000a 9A61     		str	r2, [r3, #24]
  39 000c 9A69     		ldr	r2, [r3, #24]
  40 000e 02F02002 		and	r2, r2, #32
  41 0012 0192     		str	r2, [sp, #4]
  42 0014 019A     		ldr	r2, [sp, #4]
  43              	.LBE4:
  44              	.LBB5:
 241:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  45              		.loc 1 241 0
ARM GAS  /tmp/ccyX6l7N.s 			page 6


  46 0016 9A69     		ldr	r2, [r3, #24]
  47 0018 42F00402 		orr	r2, r2, #4
  48 001c 9A61     		str	r2, [r3, #24]
  49 001e 9A69     		ldr	r2, [r3, #24]
  50 0020 02F00402 		and	r2, r2, #4
  51 0024 0292     		str	r2, [sp, #8]
  52 0026 029A     		ldr	r2, [sp, #8]
  53              	.LBE5:
  54              	.LBB6:
 242:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  55              		.loc 1 242 0
  56 0028 9A69     		ldr	r2, [r3, #24]
  57 002a 42F00802 		orr	r2, r2, #8
  58 002e 9A61     		str	r2, [r3, #24]
  59 0030 9B69     		ldr	r3, [r3, #24]
  60 0032 03F00803 		and	r3, r3, #8
  61 0036 0393     		str	r3, [sp, #12]
  62 0038 039B     		ldr	r3, [sp, #12]
  63              	.LBE6:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** }
  64              		.loc 1 244 0
  65 003a 04B0     		add	sp, sp, #16
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 0
  68              		@ sp needed
  69 003c 7047     		bx	lr
  70              	.L4:
  71 003e 00BF     		.align	2
  72              	.L3:
  73 0040 00100240 		.word	1073876992
  74              		.cfi_endproc
  75              	.LFE69:
  77              		.section	.text.USART1_IRQHandler,"ax",%progbits
  78              		.align	1
  79              		.global	USART1_IRQHandler
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	USART1_IRQHandler:
  86              	.LFB70:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** void USART1_IRQHandler(void)
 249:Core/Src/main.c **** {
  87              		.loc 1 249 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 08B5     		push	{r3, lr}
  92              	.LCFI2:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
 250:Core/Src/main.c ****   static unsigned int idx=0;
ARM GAS  /tmp/ccyX6l7N.s 			page 7


 251:Core/Src/main.c ****   char tmp;
 252:Core/Src/main.c ****   if(USART1->SR & USART_SR_RXNE)
  96              		.loc 1 252 0
  97 0002 144B     		ldr	r3, .L11
  98 0004 1B68     		ldr	r3, [r3]
  99 0006 13F0200F 		tst	r3, #32
 100 000a 22D0     		beq	.L5
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     //Could also use huart->instance->SR/DR etc
 255:Core/Src/main.c ****     // Data read from DR is from receving RDR
 256:Core/Src/main.c ****     // Data written into DR is transmitted TDR
 257:Core/Src/main.c ****     // Reading to this register also unsets required int flags
 258:Core/Src/main.c ****     // Actually two registers internally
 259:Core/Src/main.c ****     tmp = USART1->DR;
 101              		.loc 1 259 0
 102 000c 114A     		ldr	r2, .L11
 103 000e 5368     		ldr	r3, [r2, #4]
 104 0010 DBB2     		uxtb	r3, r3
 105              	.LVL0:
 260:Core/Src/main.c ****     USART1->DR = tmp;
 106              		.loc 1 260 0
 107 0012 5360     		str	r3, [r2, #4]
 261:Core/Src/main.c ****     
 262:Core/Src/main.c ****     if (idx < buff_len -1) {
 108              		.loc 1 262 0
 109 0014 104A     		ldr	r2, .L11+4
 110 0016 1268     		ldr	r2, [r2]
 111 0018 40F2FE31 		movw	r1, #1022
 112 001c 8A42     		cmp	r2, r1
 113 001e 10D8     		bhi	.L7
 263:Core/Src/main.c ****       if (tmp == 'v') {
 114              		.loc 1 263 0
 115 0020 762B     		cmp	r3, #118
 116 0022 05D0     		beq	.L10
 264:Core/Src/main.c ****         // Render
 265:Core/Src/main.c ****         idx = 0 ;
 266:Core/Src/main.c ****         write_data_oled(img_buffer,buff_len); 
 267:Core/Src/main.c ****       }
 268:Core/Src/main.c ****       else {
 269:Core/Src/main.c ****         img_buffer[idx] = tmp; 
 117              		.loc 1 269 0
 118 0024 0D49     		ldr	r1, .L11+8
 119 0026 8B54     		strb	r3, [r1, r2]
 270:Core/Src/main.c ****         idx ++;
 120              		.loc 1 270 0
 121 0028 0132     		adds	r2, r2, #1
 122 002a 0B4B     		ldr	r3, .L11+4
 123              	.LVL1:
 124 002c 1A60     		str	r2, [r3]
 125              	.LVL2:
 126 002e 08BD     		pop	{r3, pc}
 127              	.LVL3:
 128              	.L10:
 265:Core/Src/main.c ****         write_data_oled(img_buffer,buff_len); 
 129              		.loc 1 265 0
 130 0030 0022     		movs	r2, #0
 131 0032 094B     		ldr	r3, .L11+4
ARM GAS  /tmp/ccyX6l7N.s 			page 8


 132              	.LVL4:
 133 0034 1A60     		str	r2, [r3]
 134              	.LVL5:
 266:Core/Src/main.c ****       }
 135              		.loc 1 266 0
 136 0036 4FF48061 		mov	r1, #1024
 137 003a 0848     		ldr	r0, .L11+8
 138 003c FFF7FEFF 		bl	write_data_oled
 139              	.LVL6:
 140 0040 08BD     		pop	{r3, pc}
 141              	.LVL7:
 142              	.L7:
 271:Core/Src/main.c ****       }
 272:Core/Src/main.c ****     }
 273:Core/Src/main.c ****     else  {
 274:Core/Src/main.c ****       // Overflowing rewind. 
 275:Core/Src/main.c ****       idx = 0; 
 143              		.loc 1 275 0
 144 0042 0022     		movs	r2, #0
 145 0044 044B     		ldr	r3, .L11+4
 146              	.LVL8:
 147 0046 1A60     		str	r2, [r3]
 148              	.LVL9:
 276:Core/Src/main.c ****       write_data_oled(img_buffer,buff_len); 
 149              		.loc 1 276 0
 150 0048 4FF48061 		mov	r1, #1024
 151 004c 0348     		ldr	r0, .L11+8
 152 004e FFF7FEFF 		bl	write_data_oled
 153              	.LVL10:
 154              	.L5:
 155 0052 08BD     		pop	{r3, pc}
 156              	.L12:
 157              		.align	2
 158              	.L11:
 159 0054 00380140 		.word	1073821696
 160 0058 00000000 		.word	.LANCHOR0
 161 005c 00000000 		.word	img_buffer
 162              		.cfi_endproc
 163              	.LFE70:
 165              		.section	.text.Error_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	Error_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	Error_Handler:
 174              	.LFB71:
 277:Core/Src/main.c ****     }
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   return;
 281:Core/Src/main.c **** }
 282:Core/Src/main.c **** /* USER CODE END 4 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/ccyX6l7N.s 			page 9


 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** void Error_Handler(void)
 289:Core/Src/main.c **** {
 175              		.loc 1 289 0
 176              		.cfi_startproc
 177              		@ Volatile: function does not return.
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181              	.LBB7:
 182              	.LBB8:
 183              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  /tmp/ccyX6l7N.s 			page 10


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccyX6l7N.s 			page 11


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 184              		.loc 2 142 0
 185              		.syntax unified
 186              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 187 0000 72B6     		cpsid i
 188              	@ 0 "" 2
 189              		.thumb
 190              		.syntax unified
 191              	.L14:
 192 0002 FEE7     		b	.L14
 193              	.LBE8:
 194              	.LBE7:
 195              		.cfi_endproc
 196              	.LFE71:
 198              		.section	.text.MX_I2C1_Init,"ax",%progbits
 199              		.align	1
 200              		.syntax unified
ARM GAS  /tmp/ccyX6l7N.s 			page 12


 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	MX_I2C1_Init:
 206              	.LFB67:
 170:Core/Src/main.c **** 
 207              		.loc 1 170 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 08B5     		push	{r3, lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 3, -8
 215              		.cfi_offset 14, -4
 179:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 216              		.loc 1 179 0
 217 0002 0A48     		ldr	r0, .L19
 218 0004 0A4B     		ldr	r3, .L19+4
 219 0006 0360     		str	r3, [r0]
 180:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 220              		.loc 1 180 0
 221 0008 0A4B     		ldr	r3, .L19+8
 222 000a 4360     		str	r3, [r0, #4]
 181:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 223              		.loc 1 181 0
 224 000c 0023     		movs	r3, #0
 225 000e 8360     		str	r3, [r0, #8]
 182:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 226              		.loc 1 182 0
 227 0010 C360     		str	r3, [r0, #12]
 183:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 228              		.loc 1 183 0
 229 0012 4FF48042 		mov	r2, #16384
 230 0016 0261     		str	r2, [r0, #16]
 184:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 231              		.loc 1 184 0
 232 0018 4361     		str	r3, [r0, #20]
 185:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 233              		.loc 1 185 0
 234 001a 8361     		str	r3, [r0, #24]
 186:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 235              		.loc 1 186 0
 236 001c C361     		str	r3, [r0, #28]
 187:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 237              		.loc 1 187 0
 238 001e 0362     		str	r3, [r0, #32]
 188:Core/Src/main.c ****   {
 239              		.loc 1 188 0
 240 0020 FFF7FEFF 		bl	HAL_I2C_Init
 241              	.LVL11:
 242 0024 00B9     		cbnz	r0, .L18
 243 0026 08BD     		pop	{r3, pc}
 244              	.L18:
 190:Core/Src/main.c ****   }
 245              		.loc 1 190 0
 246 0028 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccyX6l7N.s 			page 13


 247              	.LVL12:
 248              	.L20:
 249              		.align	2
 250              	.L19:
 251 002c 00000000 		.word	hi2c1
 252 0030 00540040 		.word	1073763328
 253 0034 A0860100 		.word	100000
 254              		.cfi_endproc
 255              	.LFE67:
 257              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 258              		.align	1
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu softvfp
 264              	MX_USART1_UART_Init:
 265              	.LFB68:
 204:Core/Src/main.c **** 
 266              		.loc 1 204 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 213:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 275              		.loc 1 213 0
 276 0002 0A48     		ldr	r0, .L25
 277 0004 0A4B     		ldr	r3, .L25+4
 278 0006 0360     		str	r3, [r0]
 214:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 279              		.loc 1 214 0
 280 0008 4FF4E133 		mov	r3, #115200
 281 000c 4360     		str	r3, [r0, #4]
 215:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 282              		.loc 1 215 0
 283 000e 0023     		movs	r3, #0
 284 0010 8360     		str	r3, [r0, #8]
 216:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 285              		.loc 1 216 0
 286 0012 C360     		str	r3, [r0, #12]
 217:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 287              		.loc 1 217 0
 288 0014 0361     		str	r3, [r0, #16]
 218:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 289              		.loc 1 218 0
 290 0016 0C22     		movs	r2, #12
 291 0018 4261     		str	r2, [r0, #20]
 219:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 292              		.loc 1 219 0
 293 001a 8361     		str	r3, [r0, #24]
 220:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 294              		.loc 1 220 0
 295 001c C361     		str	r3, [r0, #28]
 221:Core/Src/main.c ****   {
ARM GAS  /tmp/ccyX6l7N.s 			page 14


 296              		.loc 1 221 0
 297 001e FFF7FEFF 		bl	HAL_UART_Init
 298              	.LVL13:
 299 0022 00B9     		cbnz	r0, .L24
 300 0024 08BD     		pop	{r3, pc}
 301              	.L24:
 223:Core/Src/main.c ****   }
 302              		.loc 1 223 0
 303 0026 FFF7FEFF 		bl	Error_Handler
 304              	.LVL14:
 305              	.L26:
 306 002a 00BF     		.align	2
 307              	.L25:
 308 002c 00000000 		.word	huart1
 309 0030 00380140 		.word	1073821696
 310              		.cfi_endproc
 311              	.LFE68:
 313              		.section	.text.SystemClock_Config,"ax",%progbits
 314              		.align	1
 315              		.global	SystemClock_Config
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	SystemClock_Config:
 322              	.LFB66:
 131:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 323              		.loc 1 131 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 64
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 00B5     		push	{lr}
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 14, -4
 331 0002 91B0     		sub	sp, sp, #68
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 72
 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 334              		.loc 1 132 0
 335 0004 2822     		movs	r2, #40
 336 0006 0021     		movs	r1, #0
 337 0008 06A8     		add	r0, sp, #24
 338 000a FFF7FEFF 		bl	memset
 339              	.LVL15:
 133:Core/Src/main.c **** 
 340              		.loc 1 133 0
 341 000e 0023     		movs	r3, #0
 342 0010 0193     		str	r3, [sp, #4]
 343 0012 0293     		str	r3, [sp, #8]
 344 0014 0393     		str	r3, [sp, #12]
 345 0016 0493     		str	r3, [sp, #16]
 346 0018 0593     		str	r3, [sp, #20]
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 347              		.loc 1 138 0
 348 001a 0122     		movs	r2, #1
 349 001c 0692     		str	r2, [sp, #24]
ARM GAS  /tmp/ccyX6l7N.s 			page 15


 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 350              		.loc 1 139 0
 351 001e 4FF48033 		mov	r3, #65536
 352 0022 0793     		str	r3, [sp, #28]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 353              		.loc 1 141 0
 354 0024 0A92     		str	r2, [sp, #40]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 355              		.loc 1 142 0
 356 0026 0222     		movs	r2, #2
 357 0028 0D92     		str	r2, [sp, #52]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
 358              		.loc 1 143 0
 359 002a 0E93     		str	r3, [sp, #56]
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 360              		.loc 1 144 0
 361 002c 4FF40023 		mov	r3, #524288
 362 0030 0F93     		str	r3, [sp, #60]
 145:Core/Src/main.c ****   {
 363              		.loc 1 145 0
 364 0032 06A8     		add	r0, sp, #24
 365 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 366              	.LVL16:
 367 0038 78B9     		cbnz	r0, .L31
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 368              		.loc 1 151 0
 369 003a 0F23     		movs	r3, #15
 370 003c 0193     		str	r3, [sp, #4]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 371              		.loc 1 153 0
 372 003e 0223     		movs	r3, #2
 373 0040 0293     		str	r3, [sp, #8]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 374              		.loc 1 154 0
 375 0042 0023     		movs	r3, #0
 376 0044 0393     		str	r3, [sp, #12]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 377              		.loc 1 155 0
 378 0046 0493     		str	r3, [sp, #16]
 156:Core/Src/main.c **** 
 379              		.loc 1 156 0
 380 0048 0593     		str	r3, [sp, #20]
 158:Core/Src/main.c ****   {
 381              		.loc 1 158 0
 382 004a 0121     		movs	r1, #1
 383 004c 01A8     		add	r0, sp, #4
 384 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 385              	.LVL17:
 386 0052 20B9     		cbnz	r0, .L32
 162:Core/Src/main.c **** 
 387              		.loc 1 162 0
 388 0054 11B0     		add	sp, sp, #68
 389              	.LCFI7:
 390              		.cfi_remember_state
 391              		.cfi_def_cfa_offset 4
 392              		@ sp needed
 393 0056 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccyX6l7N.s 			page 16


 394              	.L31:
 395              	.LCFI8:
 396              		.cfi_restore_state
 147:Core/Src/main.c ****   }
 397              		.loc 1 147 0
 398 005a FFF7FEFF 		bl	Error_Handler
 399              	.LVL18:
 400              	.L32:
 160:Core/Src/main.c ****   }
 401              		.loc 1 160 0
 402 005e FFF7FEFF 		bl	Error_Handler
 403              	.LVL19:
 404              		.cfi_endproc
 405              	.LFE66:
 407              		.section	.text.main,"ax",%progbits
 408              		.align	1
 409              		.global	main
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu softvfp
 415              	main:
 416              	.LFB65:
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 417              		.loc 1 73 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 10B5     		push	{r4, lr}
 422              	.LCFI9:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 4, -8
 425              		.cfi_offset 14, -4
  81:Core/Src/main.c **** 
 426              		.loc 1 81 0
 427 0002 FFF7FEFF 		bl	HAL_Init
 428              	.LVL20:
  88:Core/Src/main.c **** 
 429              		.loc 1 88 0
 430 0006 FFF7FEFF 		bl	SystemClock_Config
 431              	.LVL21:
  95:Core/Src/main.c ****   MX_I2C1_Init();
 432              		.loc 1 95 0
 433 000a FFF7FEFF 		bl	MX_GPIO_Init
 434              	.LVL22:
  96:Core/Src/main.c ****   MX_USART1_UART_Init();
 435              		.loc 1 96 0
 436 000e FFF7FEFF 		bl	MX_I2C1_Init
 437              	.LVL23:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 438              		.loc 1 97 0
 439 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 440              	.LVL24:
  99:Core/Src/main.c ****   initOled();
 441              		.loc 1 99 0
 442 0016 124B     		ldr	r3, .L40
 443 0018 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccyX6l7N.s 			page 17


 444 001a D368     		ldr	r3, [r2, #12]
 445 001c 43F02003 		orr	r3, r3, #32
 446 0020 D360     		str	r3, [r2, #12]
 100:Core/Src/main.c ****   // Set whole buffer as black
 447              		.loc 1 100 0
 448 0022 FFF7FEFF 		bl	initOled
 449              	.LVL25:
 450              	.LBB9:
 102:Core/Src/main.c ****   {
 451              		.loc 1 102 0
 452 0026 0023     		movs	r3, #0
 453 0028 03E0     		b	.L34
 454              	.LVL26:
 455              	.L35:
 104:Core/Src/main.c ****   }
 456              		.loc 1 104 0 discriminator 3
 457 002a 0021     		movs	r1, #0
 458 002c 0D4A     		ldr	r2, .L40+4
 459 002e D154     		strb	r1, [r2, r3]
 102:Core/Src/main.c ****   {
 460              		.loc 1 102 0 discriminator 3
 461 0030 0133     		adds	r3, r3, #1
 462              	.LVL27:
 463              	.L34:
 102:Core/Src/main.c ****   {
 464              		.loc 1 102 0 is_stmt 0 discriminator 1
 465 0032 B3F5806F 		cmp	r3, #1024
 466 0036 F8DB     		blt	.L35
 467 0038 0024     		movs	r4, #0
 468 003a 08E0     		b	.L36
 469              	.LVL28:
 470              	.L37:
 471              	.LBE9:
 472              	.LBB10:
 110:Core/Src/main.c ****   }
 473              		.loc 1 110 0 is_stmt 1 discriminator 3
 474 003c E301     		lsls	r3, r4, #7
 475 003e 8022     		movs	r2, #128
 476 0040 0949     		ldr	r1, .L40+8
 477 0042 1944     		add	r1, r1, r3
 478 0044 0748     		ldr	r0, .L40+4
 479 0046 1844     		add	r0, r0, r3
 480 0048 FFF7FEFF 		bl	memcpy
 481              	.LVL29:
 108:Core/Src/main.c ****   {
 482              		.loc 1 108 0 discriminator 3
 483 004c 0134     		adds	r4, r4, #1
 484              	.LVL30:
 485              	.L36:
 108:Core/Src/main.c ****   {
 486              		.loc 1 108 0 is_stmt 0 discriminator 1
 487 004e 072C     		cmp	r4, #7
 488 0050 F4DD     		ble	.L37
 489              	.LBE10:
 112:Core/Src/main.c ****   /* USER CODE END 2 */
 490              		.loc 1 112 0 is_stmt 1
 491 0052 4FF48061 		mov	r1, #1024
ARM GAS  /tmp/ccyX6l7N.s 			page 18


 492 0056 0348     		ldr	r0, .L40+4
 493 0058 FFF7FEFF 		bl	write_data_oled
 494              	.LVL31:
 495              	.L38:
 496 005c FEE7     		b	.L38
 497              	.L41:
 498 005e 00BF     		.align	2
 499              	.L40:
 500 0060 00000000 		.word	huart1
 501 0064 00000000 		.word	img_buffer
 502 0068 00000000 		.word	.LANCHOR1
 503              		.cfi_endproc
 504              	.LFE65:
 506              		.comm	img_buffer,1024,4
 507              		.comm	huart1,64,4
 508              		.comm	hi2c1,84,4
 509              		.global	raine
 510              		.section	.bss.idx.6166,"aw",%nobits
 511              		.align	2
 512              		.set	.LANCHOR0,. + 0
 515              	idx.6166:
 516 0000 00000000 		.space	4
 517              		.section	.data.raine,"aw",%progbits
 518              		.align	2
 519              		.set	.LANCHOR1,. + 0
 522              	raine:
 523 0000 FF       		.byte	-1
 524 0001 FF       		.byte	-1
 525 0002 FF       		.byte	-1
 526 0003 C7       		.byte	-57
 527 0004 C7       		.byte	-57
 528 0005 C7       		.byte	-57
 529 0006 C7       		.byte	-57
 530 0007 C7       		.byte	-57
 531 0008 C7       		.byte	-57
 532 0009 C7       		.byte	-57
 533 000a 07       		.byte	7
 534 000b 07       		.byte	7
 535 000c 07       		.byte	7
 536 000d 3F       		.byte	63
 537 000e 3F       		.byte	63
 538 000f 3F       		.byte	63
 539 0010 F8       		.byte	-8
 540 0011 F8       		.byte	-8
 541 0012 F8       		.byte	-8
 542 0013 38       		.byte	56
 543 0014 38       		.byte	56
 544 0015 38       		.byte	56
 545 0016 07       		.byte	7
 546 0017 07       		.byte	7
 547 0018 07       		.byte	7
 548 0019 07       		.byte	7
 549 001a 07       		.byte	7
 550 001b 07       		.byte	7
 551 001c 07       		.byte	7
 552 001d 07       		.byte	7
 553 001e 07       		.byte	7
ARM GAS  /tmp/ccyX6l7N.s 			page 19


 554 001f 07       		.byte	7
 555 0020 07       		.byte	7
 556 0021 07       		.byte	7
 557 0022 07       		.byte	7
 558 0023 07       		.byte	7
 559 0024 07       		.byte	7
 560 0025 07       		.byte	7
 561 0026 07       		.byte	7
 562 0027 07       		.byte	7
 563 0028 07       		.byte	7
 564 0029 07       		.byte	7
 565 002a 07       		.byte	7
 566 002b 07       		.byte	7
 567 002c 07       		.byte	7
 568 002d 38       		.byte	56
 569 002e 38       		.byte	56
 570 002f 38       		.byte	56
 571 0030 F8       		.byte	-8
 572 0031 F8       		.byte	-8
 573 0032 F8       		.byte	-8
 574 0033 3F       		.byte	63
 575 0034 3F       		.byte	63
 576 0035 3F       		.byte	63
 577 0036 07       		.byte	7
 578 0037 07       		.byte	7
 579 0038 07       		.byte	7
 580 0039 C7       		.byte	-57
 581 003a C7       		.byte	-57
 582 003b C7       		.byte	-57
 583 003c C7       		.byte	-57
 584 003d C7       		.byte	-57
 585 003e C7       		.byte	-57
 586 003f C7       		.byte	-57
 587 0040 FF       		.byte	-1
 588 0041 FF       		.byte	-1
 589 0042 FF       		.byte	-1
 590 0043 00       		.byte	0
 591 0044 00       		.byte	0
 592 0045 00       		.byte	0
 593 0046 00       		.byte	0
 594 0047 00       		.byte	0
 595 0048 00       		.byte	0
 596 0049 00       		.byte	0
 597 004a 00       		.byte	0
 598 004b 00       		.byte	0
 599 004c 00       		.byte	0
 600 004d 00       		.byte	0
 601 004e 00       		.byte	0
 602 004f 00       		.byte	0
 603 0050 00       		.byte	0
 604 0051 00       		.byte	0
 605 0052 00       		.byte	0
 606 0053 00       		.byte	0
 607 0054 00       		.byte	0
 608 0055 00       		.byte	0
 609 0056 00       		.byte	0
 610 0057 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 20


 611 0058 00       		.byte	0
 612 0059 00       		.byte	0
 613 005a 00       		.byte	0
 614 005b 00       		.byte	0
 615 005c 00       		.byte	0
 616 005d 00       		.byte	0
 617 005e 00       		.byte	0
 618 005f 00       		.byte	0
 619 0060 00       		.byte	0
 620 0061 00       		.byte	0
 621 0062 00       		.byte	0
 622 0063 00       		.byte	0
 623 0064 00       		.byte	0
 624 0065 00       		.byte	0
 625 0066 00       		.byte	0
 626 0067 00       		.byte	0
 627 0068 00       		.byte	0
 628 0069 00       		.byte	0
 629 006a 00       		.byte	0
 630 006b 00       		.byte	0
 631 006c 00       		.byte	0
 632 006d 00       		.byte	0
 633 006e 00       		.byte	0
 634 006f 00       		.byte	0
 635 0070 00       		.byte	0
 636 0071 00       		.byte	0
 637 0072 00       		.byte	0
 638 0073 00       		.byte	0
 639 0074 00       		.byte	0
 640 0075 00       		.byte	0
 641 0076 00       		.byte	0
 642 0077 00       		.byte	0
 643 0078 00       		.byte	0
 644 0079 00       		.byte	0
 645 007a 00       		.byte	0
 646 007b 00       		.byte	0
 647 007c 00       		.byte	0
 648 007d 00       		.byte	0
 649 007e 00       		.byte	0
 650 007f 00       		.byte	0
 651 0080 FF       		.byte	-1
 652 0081 FF       		.byte	-1
 653 0082 FF       		.byte	-1
 654 0083 FF       		.byte	-1
 655 0084 FF       		.byte	-1
 656 0085 FF       		.byte	-1
 657 0086 FF       		.byte	-1
 658 0087 FF       		.byte	-1
 659 0088 FF       		.byte	-1
 660 0089 FF       		.byte	-1
 661 008a FC       		.byte	-4
 662 008b FC       		.byte	-4
 663 008c FC       		.byte	-4
 664 008d 1C       		.byte	28
 665 008e 1C       		.byte	28
 666 008f 1C       		.byte	28
 667 0090 03       		.byte	3
ARM GAS  /tmp/ccyX6l7N.s 			page 21


 668 0091 03       		.byte	3
 669 0092 03       		.byte	3
 670 0093 00       		.byte	0
 671 0094 00       		.byte	0
 672 0095 00       		.byte	0
 673 0096 00       		.byte	0
 674 0097 00       		.byte	0
 675 0098 00       		.byte	0
 676 0099 00       		.byte	0
 677 009a 00       		.byte	0
 678 009b 00       		.byte	0
 679 009c 00       		.byte	0
 680 009d 00       		.byte	0
 681 009e 00       		.byte	0
 682 009f 00       		.byte	0
 683 00a0 00       		.byte	0
 684 00a1 00       		.byte	0
 685 00a2 00       		.byte	0
 686 00a3 00       		.byte	0
 687 00a4 00       		.byte	0
 688 00a5 00       		.byte	0
 689 00a6 00       		.byte	0
 690 00a7 00       		.byte	0
 691 00a8 00       		.byte	0
 692 00a9 00       		.byte	0
 693 00aa 00       		.byte	0
 694 00ab 00       		.byte	0
 695 00ac 00       		.byte	0
 696 00ad 00       		.byte	0
 697 00ae 00       		.byte	0
 698 00af 00       		.byte	0
 699 00b0 03       		.byte	3
 700 00b1 03       		.byte	3
 701 00b2 03       		.byte	3
 702 00b3 1C       		.byte	28
 703 00b4 1C       		.byte	28
 704 00b5 1C       		.byte	28
 705 00b6 FC       		.byte	-4
 706 00b7 FC       		.byte	-4
 707 00b8 FC       		.byte	-4
 708 00b9 FF       		.byte	-1
 709 00ba FF       		.byte	-1
 710 00bb FF       		.byte	-1
 711 00bc FF       		.byte	-1
 712 00bd FF       		.byte	-1
 713 00be FF       		.byte	-1
 714 00bf FF       		.byte	-1
 715 00c0 FF       		.byte	-1
 716 00c1 FF       		.byte	-1
 717 00c2 FF       		.byte	-1
 718 00c3 00       		.byte	0
 719 00c4 00       		.byte	0
 720 00c5 00       		.byte	0
 721 00c6 00       		.byte	0
 722 00c7 00       		.byte	0
 723 00c8 00       		.byte	0
 724 00c9 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 22


 725 00ca 00       		.byte	0
 726 00cb 00       		.byte	0
 727 00cc 00       		.byte	0
 728 00cd 00       		.byte	0
 729 00ce 00       		.byte	0
 730 00cf 00       		.byte	0
 731 00d0 00       		.byte	0
 732 00d1 00       		.byte	0
 733 00d2 00       		.byte	0
 734 00d3 00       		.byte	0
 735 00d4 00       		.byte	0
 736 00d5 00       		.byte	0
 737 00d6 00       		.byte	0
 738 00d7 00       		.byte	0
 739 00d8 00       		.byte	0
 740 00d9 00       		.byte	0
 741 00da 00       		.byte	0
 742 00db 00       		.byte	0
 743 00dc 00       		.byte	0
 744 00dd 00       		.byte	0
 745 00de 00       		.byte	0
 746 00df 00       		.byte	0
 747 00e0 00       		.byte	0
 748 00e1 00       		.byte	0
 749 00e2 00       		.byte	0
 750 00e3 00       		.byte	0
 751 00e4 00       		.byte	0
 752 00e5 00       		.byte	0
 753 00e6 00       		.byte	0
 754 00e7 00       		.byte	0
 755 00e8 00       		.byte	0
 756 00e9 00       		.byte	0
 757 00ea 00       		.byte	0
 758 00eb 00       		.byte	0
 759 00ec 00       		.byte	0
 760 00ed 00       		.byte	0
 761 00ee 00       		.byte	0
 762 00ef 00       		.byte	0
 763 00f0 00       		.byte	0
 764 00f1 00       		.byte	0
 765 00f2 00       		.byte	0
 766 00f3 00       		.byte	0
 767 00f4 00       		.byte	0
 768 00f5 00       		.byte	0
 769 00f6 00       		.byte	0
 770 00f7 00       		.byte	0
 771 00f8 00       		.byte	0
 772 00f9 00       		.byte	0
 773 00fa 00       		.byte	0
 774 00fb 00       		.byte	0
 775 00fc 00       		.byte	0
 776 00fd 00       		.byte	0
 777 00fe 00       		.byte	0
 778 00ff 00       		.byte	0
 779 0100 07       		.byte	7
 780 0101 07       		.byte	7
 781 0102 07       		.byte	7
ARM GAS  /tmp/ccyX6l7N.s 			page 23


 782 0103 FF       		.byte	-1
 783 0104 FF       		.byte	-1
 784 0105 FF       		.byte	-1
 785 0106 3F       		.byte	63
 786 0107 3F       		.byte	63
 787 0108 3F       		.byte	63
 788 0109 3F       		.byte	63
 789 010a 07       		.byte	7
 790 010b 07       		.byte	7
 791 010c 07       		.byte	7
 792 010d C0       		.byte	-64
 793 010e C0       		.byte	-64
 794 010f C0       		.byte	-64
 795 0110 38       		.byte	56
 796 0111 38       		.byte	56
 797 0112 38       		.byte	56
 798 0113 07       		.byte	7
 799 0114 07       		.byte	7
 800 0115 07       		.byte	7
 801 0116 C0       		.byte	-64
 802 0117 C0       		.byte	-64
 803 0118 C0       		.byte	-64
 804 0119 C0       		.byte	-64
 805 011a C0       		.byte	-64
 806 011b C0       		.byte	-64
 807 011c C0       		.byte	-64
 808 011d 00       		.byte	0
 809 011e 00       		.byte	0
 810 011f 00       		.byte	0
 811 0120 00       		.byte	0
 812 0121 00       		.byte	0
 813 0122 00       		.byte	0
 814 0123 00       		.byte	0
 815 0124 00       		.byte	0
 816 0125 00       		.byte	0
 817 0126 C0       		.byte	-64
 818 0127 C0       		.byte	-64
 819 0128 C0       		.byte	-64
 820 0129 C0       		.byte	-64
 821 012a C0       		.byte	-64
 822 012b C0       		.byte	-64
 823 012c C0       		.byte	-64
 824 012d 07       		.byte	7
 825 012e 07       		.byte	7
 826 012f 07       		.byte	7
 827 0130 38       		.byte	56
 828 0131 38       		.byte	56
 829 0132 38       		.byte	56
 830 0133 C0       		.byte	-64
 831 0134 C0       		.byte	-64
 832 0135 C0       		.byte	-64
 833 0136 07       		.byte	7
 834 0137 07       		.byte	7
 835 0138 07       		.byte	7
 836 0139 3F       		.byte	63
 837 013a 3F       		.byte	63
 838 013b 3F       		.byte	63
ARM GAS  /tmp/ccyX6l7N.s 			page 24


 839 013c 3F       		.byte	63
 840 013d FF       		.byte	-1
 841 013e FF       		.byte	-1
 842 013f FF       		.byte	-1
 843 0140 07       		.byte	7
 844 0141 07       		.byte	7
 845 0142 07       		.byte	7
 846 0143 00       		.byte	0
 847 0144 00       		.byte	0
 848 0145 00       		.byte	0
 849 0146 00       		.byte	0
 850 0147 00       		.byte	0
 851 0148 00       		.byte	0
 852 0149 00       		.byte	0
 853 014a 00       		.byte	0
 854 014b 00       		.byte	0
 855 014c 00       		.byte	0
 856 014d 00       		.byte	0
 857 014e 00       		.byte	0
 858 014f 00       		.byte	0
 859 0150 00       		.byte	0
 860 0151 00       		.byte	0
 861 0152 00       		.byte	0
 862 0153 00       		.byte	0
 863 0154 00       		.byte	0
 864 0155 00       		.byte	0
 865 0156 00       		.byte	0
 866 0157 00       		.byte	0
 867 0158 00       		.byte	0
 868 0159 00       		.byte	0
 869 015a 00       		.byte	0
 870 015b 00       		.byte	0
 871 015c 00       		.byte	0
 872 015d 00       		.byte	0
 873 015e 00       		.byte	0
 874 015f 00       		.byte	0
 875 0160 00       		.byte	0
 876 0161 00       		.byte	0
 877 0162 00       		.byte	0
 878 0163 00       		.byte	0
 879 0164 00       		.byte	0
 880 0165 00       		.byte	0
 881 0166 00       		.byte	0
 882 0167 00       		.byte	0
 883 0168 00       		.byte	0
 884 0169 00       		.byte	0
 885 016a 00       		.byte	0
 886 016b 00       		.byte	0
 887 016c 00       		.byte	0
 888 016d 00       		.byte	0
 889 016e 00       		.byte	0
 890 016f 00       		.byte	0
 891 0170 00       		.byte	0
 892 0171 00       		.byte	0
 893 0172 00       		.byte	0
 894 0173 00       		.byte	0
 895 0174 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 25


 896 0175 00       		.byte	0
 897 0176 00       		.byte	0
 898 0177 00       		.byte	0
 899 0178 00       		.byte	0
 900 0179 00       		.byte	0
 901 017a 00       		.byte	0
 902 017b 00       		.byte	0
 903 017c 00       		.byte	0
 904 017d 00       		.byte	0
 905 017e 00       		.byte	0
 906 017f 00       		.byte	0
 907 0180 00       		.byte	0
 908 0181 00       		.byte	0
 909 0182 00       		.byte	0
 910 0183 FF       		.byte	-1
 911 0184 FF       		.byte	-1
 912 0185 FF       		.byte	-1
 913 0186 00       		.byte	0
 914 0187 00       		.byte	0
 915 0188 00       		.byte	0
 916 0189 00       		.byte	0
 917 018a FC       		.byte	-4
 918 018b FC       		.byte	-4
 919 018c FC       		.byte	-4
 920 018d 03       		.byte	3
 921 018e 03       		.byte	3
 922 018f 03       		.byte	3
 923 0190 00       		.byte	0
 924 0191 00       		.byte	0
 925 0192 00       		.byte	0
 926 0193 FC       		.byte	-4
 927 0194 FC       		.byte	-4
 928 0195 FC       		.byte	-4
 929 0196 E3       		.byte	-29
 930 0197 E3       		.byte	-29
 931 0198 E3       		.byte	-29
 932 0199 E3       		.byte	-29
 933 019a 03       		.byte	3
 934 019b 03       		.byte	3
 935 019c 03       		.byte	3
 936 019d 1C       		.byte	28
 937 019e 1C       		.byte	28
 938 019f 1C       		.byte	28
 939 01a0 E0       		.byte	-32
 940 01a1 E0       		.byte	-32
 941 01a2 E0       		.byte	-32
 942 01a3 1C       		.byte	28
 943 01a4 1C       		.byte	28
 944 01a5 1C       		.byte	28
 945 01a6 03       		.byte	3
 946 01a7 03       		.byte	3
 947 01a8 03       		.byte	3
 948 01a9 E3       		.byte	-29
 949 01aa E3       		.byte	-29
 950 01ab E3       		.byte	-29
 951 01ac E3       		.byte	-29
 952 01ad FC       		.byte	-4
ARM GAS  /tmp/ccyX6l7N.s 			page 26


 953 01ae FC       		.byte	-4
 954 01af FC       		.byte	-4
 955 01b0 00       		.byte	0
 956 01b1 00       		.byte	0
 957 01b2 00       		.byte	0
 958 01b3 03       		.byte	3
 959 01b4 03       		.byte	3
 960 01b5 03       		.byte	3
 961 01b6 FC       		.byte	-4
 962 01b7 FC       		.byte	-4
 963 01b8 FC       		.byte	-4
 964 01b9 00       		.byte	0
 965 01ba 00       		.byte	0
 966 01bb 00       		.byte	0
 967 01bc 00       		.byte	0
 968 01bd FF       		.byte	-1
 969 01be FF       		.byte	-1
 970 01bf FF       		.byte	-1
 971 01c0 00       		.byte	0
 972 01c1 00       		.byte	0
 973 01c2 00       		.byte	0
 974 01c3 00       		.byte	0
 975 01c4 00       		.byte	0
 976 01c5 00       		.byte	0
 977 01c6 00       		.byte	0
 978 01c7 00       		.byte	0
 979 01c8 00       		.byte	0
 980 01c9 00       		.byte	0
 981 01ca 00       		.byte	0
 982 01cb 00       		.byte	0
 983 01cc 00       		.byte	0
 984 01cd 00       		.byte	0
 985 01ce 00       		.byte	0
 986 01cf 00       		.byte	0
 987 01d0 00       		.byte	0
 988 01d1 00       		.byte	0
 989 01d2 00       		.byte	0
 990 01d3 00       		.byte	0
 991 01d4 00       		.byte	0
 992 01d5 00       		.byte	0
 993 01d6 00       		.byte	0
 994 01d7 00       		.byte	0
 995 01d8 00       		.byte	0
 996 01d9 00       		.byte	0
 997 01da 00       		.byte	0
 998 01db 00       		.byte	0
 999 01dc 00       		.byte	0
 1000 01dd 00       		.byte	0
 1001 01de 00       		.byte	0
 1002 01df 00       		.byte	0
 1003 01e0 00       		.byte	0
 1004 01e1 00       		.byte	0
 1005 01e2 00       		.byte	0
 1006 01e3 00       		.byte	0
 1007 01e4 00       		.byte	0
 1008 01e5 00       		.byte	0
 1009 01e6 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 27


 1010 01e7 00       		.byte	0
 1011 01e8 00       		.byte	0
 1012 01e9 00       		.byte	0
 1013 01ea 00       		.byte	0
 1014 01eb 00       		.byte	0
 1015 01ec 00       		.byte	0
 1016 01ed 00       		.byte	0
 1017 01ee 00       		.byte	0
 1018 01ef 00       		.byte	0
 1019 01f0 00       		.byte	0
 1020 01f1 00       		.byte	0
 1021 01f2 00       		.byte	0
 1022 01f3 00       		.byte	0
 1023 01f4 00       		.byte	0
 1024 01f5 00       		.byte	0
 1025 01f6 00       		.byte	0
 1026 01f7 00       		.byte	0
 1027 01f8 00       		.byte	0
 1028 01f9 00       		.byte	0
 1029 01fa 00       		.byte	0
 1030 01fb 00       		.byte	0
 1031 01fc 00       		.byte	0
 1032 01fd 00       		.byte	0
 1033 01fe 00       		.byte	0
 1034 01ff 00       		.byte	0
 1035 0200 00       		.byte	0
 1036 0201 00       		.byte	0
 1037 0202 00       		.byte	0
 1038 0203 FF       		.byte	-1
 1039 0204 FF       		.byte	-1
 1040 0205 FF       		.byte	-1
 1041 0206 07       		.byte	7
 1042 0207 07       		.byte	7
 1043 0208 07       		.byte	7
 1044 0209 07       		.byte	7
 1045 020a C7       		.byte	-57
 1046 020b C7       		.byte	-57
 1047 020c C7       		.byte	-57
 1048 020d 38       		.byte	56
 1049 020e 38       		.byte	56
 1050 020f 38       		.byte	56
 1051 0210 3F       		.byte	63
 1052 0211 3F       		.byte	63
 1053 0212 3F       		.byte	63
 1054 0213 00       		.byte	0
 1055 0214 00       		.byte	0
 1056 0215 00       		.byte	0
 1057 0216 3F       		.byte	63
 1058 0217 3F       		.byte	63
 1059 0218 3F       		.byte	63
 1060 0219 3F       		.byte	63
 1061 021a 00       		.byte	0
 1062 021b 00       		.byte	0
 1063 021c 00       		.byte	0
 1064 021d 00       		.byte	0
 1065 021e 00       		.byte	0
 1066 021f 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 28


 1067 0220 00       		.byte	0
 1068 0221 00       		.byte	0
 1069 0222 00       		.byte	0
 1070 0223 00       		.byte	0
 1071 0224 00       		.byte	0
 1072 0225 00       		.byte	0
 1073 0226 00       		.byte	0
 1074 0227 00       		.byte	0
 1075 0228 00       		.byte	0
 1076 0229 3F       		.byte	63
 1077 022a 3F       		.byte	63
 1078 022b 3F       		.byte	63
 1079 022c 3F       		.byte	63
 1080 022d 00       		.byte	0
 1081 022e 00       		.byte	0
 1082 022f 00       		.byte	0
 1083 0230 3F       		.byte	63
 1084 0231 3F       		.byte	63
 1085 0232 3F       		.byte	63
 1086 0233 38       		.byte	56
 1087 0234 38       		.byte	56
 1088 0235 38       		.byte	56
 1089 0236 C7       		.byte	-57
 1090 0237 C7       		.byte	-57
 1091 0238 C7       		.byte	-57
 1092 0239 07       		.byte	7
 1093 023a 07       		.byte	7
 1094 023b 07       		.byte	7
 1095 023c 07       		.byte	7
 1096 023d FF       		.byte	-1
 1097 023e FF       		.byte	-1
 1098 023f FF       		.byte	-1
 1099 0240 00       		.byte	0
 1100 0241 00       		.byte	0
 1101 0242 00       		.byte	0
 1102 0243 00       		.byte	0
 1103 0244 00       		.byte	0
 1104 0245 00       		.byte	0
 1105 0246 00       		.byte	0
 1106 0247 00       		.byte	0
 1107 0248 00       		.byte	0
 1108 0249 00       		.byte	0
 1109 024a 00       		.byte	0
 1110 024b 00       		.byte	0
 1111 024c 00       		.byte	0
 1112 024d 00       		.byte	0
 1113 024e 00       		.byte	0
 1114 024f 00       		.byte	0
 1115 0250 00       		.byte	0
 1116 0251 00       		.byte	0
 1117 0252 00       		.byte	0
 1118 0253 00       		.byte	0
 1119 0254 00       		.byte	0
 1120 0255 00       		.byte	0
 1121 0256 00       		.byte	0
 1122 0257 00       		.byte	0
 1123 0258 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 29


 1124 0259 00       		.byte	0
 1125 025a 00       		.byte	0
 1126 025b 00       		.byte	0
 1127 025c 00       		.byte	0
 1128 025d 00       		.byte	0
 1129 025e 00       		.byte	0
 1130 025f 00       		.byte	0
 1131 0260 00       		.byte	0
 1132 0261 00       		.byte	0
 1133 0262 00       		.byte	0
 1134 0263 00       		.byte	0
 1135 0264 00       		.byte	0
 1136 0265 00       		.byte	0
 1137 0266 00       		.byte	0
 1138 0267 00       		.byte	0
 1139 0268 00       		.byte	0
 1140 0269 00       		.byte	0
 1141 026a 00       		.byte	0
 1142 026b 00       		.byte	0
 1143 026c 00       		.byte	0
 1144 026d 00       		.byte	0
 1145 026e 00       		.byte	0
 1146 026f 00       		.byte	0
 1147 0270 00       		.byte	0
 1148 0271 00       		.byte	0
 1149 0272 00       		.byte	0
 1150 0273 00       		.byte	0
 1151 0274 00       		.byte	0
 1152 0275 00       		.byte	0
 1153 0276 00       		.byte	0
 1154 0277 00       		.byte	0
 1155 0278 00       		.byte	0
 1156 0279 00       		.byte	0
 1157 027a 00       		.byte	0
 1158 027b 00       		.byte	0
 1159 027c 00       		.byte	0
 1160 027d 00       		.byte	0
 1161 027e 00       		.byte	0
 1162 027f 00       		.byte	0
 1163 0280 00       		.byte	0
 1164 0281 00       		.byte	0
 1165 0282 00       		.byte	0
 1166 0283 1F       		.byte	31
 1167 0284 1F       		.byte	31
 1168 0285 1F       		.byte	31
 1169 0286 E0       		.byte	-32
 1170 0287 E0       		.byte	-32
 1171 0288 E0       		.byte	-32
 1172 0289 E0       		.byte	-32
 1173 028a 1F       		.byte	31
 1174 028b 1F       		.byte	31
 1175 028c 1F       		.byte	31
 1176 028d E0       		.byte	-32
 1177 028e E0       		.byte	-32
 1178 028f E0       		.byte	-32
 1179 0290 00       		.byte	0
 1180 0291 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 30


 1181 0292 00       		.byte	0
 1182 0293 00       		.byte	0
 1183 0294 00       		.byte	0
 1184 0295 00       		.byte	0
 1185 0296 00       		.byte	0
 1186 0297 00       		.byte	0
 1187 0298 00       		.byte	0
 1188 0299 00       		.byte	0
 1189 029a 00       		.byte	0
 1190 029b 00       		.byte	0
 1191 029c 00       		.byte	0
 1192 029d E0       		.byte	-32
 1193 029e E0       		.byte	-32
 1194 029f E0       		.byte	-32
 1195 02a0 E0       		.byte	-32
 1196 02a1 E0       		.byte	-32
 1197 02a2 E0       		.byte	-32
 1198 02a3 E0       		.byte	-32
 1199 02a4 E0       		.byte	-32
 1200 02a5 E0       		.byte	-32
 1201 02a6 00       		.byte	0
 1202 02a7 00       		.byte	0
 1203 02a8 00       		.byte	0
 1204 02a9 00       		.byte	0
 1205 02aa 00       		.byte	0
 1206 02ab 00       		.byte	0
 1207 02ac 00       		.byte	0
 1208 02ad 00       		.byte	0
 1209 02ae 00       		.byte	0
 1210 02af 00       		.byte	0
 1211 02b0 00       		.byte	0
 1212 02b1 00       		.byte	0
 1213 02b2 00       		.byte	0
 1214 02b3 E0       		.byte	-32
 1215 02b4 E0       		.byte	-32
 1216 02b5 E0       		.byte	-32
 1217 02b6 1F       		.byte	31
 1218 02b7 1F       		.byte	31
 1219 02b8 1F       		.byte	31
 1220 02b9 E0       		.byte	-32
 1221 02ba E0       		.byte	-32
 1222 02bb E0       		.byte	-32
 1223 02bc E0       		.byte	-32
 1224 02bd 1F       		.byte	31
 1225 02be 1F       		.byte	31
 1226 02bf 1F       		.byte	31
 1227 02c0 00       		.byte	0
 1228 02c1 00       		.byte	0
 1229 02c2 00       		.byte	0
 1230 02c3 00       		.byte	0
 1231 02c4 00       		.byte	0
 1232 02c5 00       		.byte	0
 1233 02c6 00       		.byte	0
 1234 02c7 00       		.byte	0
 1235 02c8 00       		.byte	0
 1236 02c9 00       		.byte	0
 1237 02ca 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 31


 1238 02cb 00       		.byte	0
 1239 02cc 00       		.byte	0
 1240 02cd 00       		.byte	0
 1241 02ce 00       		.byte	0
 1242 02cf 00       		.byte	0
 1243 02d0 00       		.byte	0
 1244 02d1 00       		.byte	0
 1245 02d2 00       		.byte	0
 1246 02d3 00       		.byte	0
 1247 02d4 00       		.byte	0
 1248 02d5 00       		.byte	0
 1249 02d6 00       		.byte	0
 1250 02d7 00       		.byte	0
 1251 02d8 00       		.byte	0
 1252 02d9 00       		.byte	0
 1253 02da 00       		.byte	0
 1254 02db 00       		.byte	0
 1255 02dc 00       		.byte	0
 1256 02dd 00       		.byte	0
 1257 02de 00       		.byte	0
 1258 02df 00       		.byte	0
 1259 02e0 00       		.byte	0
 1260 02e1 00       		.byte	0
 1261 02e2 00       		.byte	0
 1262 02e3 00       		.byte	0
 1263 02e4 00       		.byte	0
 1264 02e5 00       		.byte	0
 1265 02e6 00       		.byte	0
 1266 02e7 00       		.byte	0
 1267 02e8 00       		.byte	0
 1268 02e9 00       		.byte	0
 1269 02ea 00       		.byte	0
 1270 02eb 00       		.byte	0
 1271 02ec 00       		.byte	0
 1272 02ed 00       		.byte	0
 1273 02ee 00       		.byte	0
 1274 02ef 00       		.byte	0
 1275 02f0 00       		.byte	0
 1276 02f1 00       		.byte	0
 1277 02f2 00       		.byte	0
 1278 02f3 00       		.byte	0
 1279 02f4 00       		.byte	0
 1280 02f5 00       		.byte	0
 1281 02f6 00       		.byte	0
 1282 02f7 00       		.byte	0
 1283 02f8 00       		.byte	0
 1284 02f9 00       		.byte	0
 1285 02fa 00       		.byte	0
 1286 02fb 00       		.byte	0
 1287 02fc 00       		.byte	0
 1288 02fd 00       		.byte	0
 1289 02fe 00       		.byte	0
 1290 02ff 00       		.byte	0
 1291 0300 00       		.byte	0
 1292 0301 00       		.byte	0
 1293 0302 00       		.byte	0
 1294 0303 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 32


 1295 0304 00       		.byte	0
 1296 0305 00       		.byte	0
 1297 0306 07       		.byte	7
 1298 0307 07       		.byte	7
 1299 0308 07       		.byte	7
 1300 0309 07       		.byte	7
 1301 030a 38       		.byte	56
 1302 030b 38       		.byte	56
 1303 030c 38       		.byte	56
 1304 030d F8       		.byte	-8
 1305 030e F8       		.byte	-8
 1306 030f F8       		.byte	-8
 1307 0310 07       		.byte	7
 1308 0311 07       		.byte	7
 1309 0312 07       		.byte	7
 1310 0313 38       		.byte	56
 1311 0314 38       		.byte	56
 1312 0315 38       		.byte	56
 1313 0316 C0       		.byte	-64
 1314 0317 C0       		.byte	-64
 1315 0318 C0       		.byte	-64
 1316 0319 C0       		.byte	-64
 1317 031a 00       		.byte	0
 1318 031b 00       		.byte	0
 1319 031c 00       		.byte	0
 1320 031d 38       		.byte	56
 1321 031e 38       		.byte	56
 1322 031f 38       		.byte	56
 1323 0320 38       		.byte	56
 1324 0321 38       		.byte	56
 1325 0322 38       		.byte	56
 1326 0323 38       		.byte	56
 1327 0324 38       		.byte	56
 1328 0325 38       		.byte	56
 1329 0326 00       		.byte	0
 1330 0327 00       		.byte	0
 1331 0328 00       		.byte	0
 1332 0329 C0       		.byte	-64
 1333 032a C0       		.byte	-64
 1334 032b C0       		.byte	-64
 1335 032c C0       		.byte	-64
 1336 032d 38       		.byte	56
 1337 032e 38       		.byte	56
 1338 032f 38       		.byte	56
 1339 0330 07       		.byte	7
 1340 0331 07       		.byte	7
 1341 0332 07       		.byte	7
 1342 0333 F8       		.byte	-8
 1343 0334 F8       		.byte	-8
 1344 0335 F8       		.byte	-8
 1345 0336 38       		.byte	56
 1346 0337 38       		.byte	56
 1347 0338 38       		.byte	56
 1348 0339 07       		.byte	7
 1349 033a 07       		.byte	7
 1350 033b 07       		.byte	7
 1351 033c 07       		.byte	7
ARM GAS  /tmp/ccyX6l7N.s 			page 33


 1352 033d 00       		.byte	0
 1353 033e 00       		.byte	0
 1354 033f 00       		.byte	0
 1355 0340 00       		.byte	0
 1356 0341 00       		.byte	0
 1357 0342 00       		.byte	0
 1358 0343 00       		.byte	0
 1359 0344 00       		.byte	0
 1360 0345 00       		.byte	0
 1361 0346 00       		.byte	0
 1362 0347 00       		.byte	0
 1363 0348 00       		.byte	0
 1364 0349 00       		.byte	0
 1365 034a 00       		.byte	0
 1366 034b 00       		.byte	0
 1367 034c 00       		.byte	0
 1368 034d 00       		.byte	0
 1369 034e 00       		.byte	0
 1370 034f 00       		.byte	0
 1371 0350 00       		.byte	0
 1372 0351 00       		.byte	0
 1373 0352 00       		.byte	0
 1374 0353 00       		.byte	0
 1375 0354 00       		.byte	0
 1376 0355 00       		.byte	0
 1377 0356 00       		.byte	0
 1378 0357 00       		.byte	0
 1379 0358 00       		.byte	0
 1380 0359 00       		.byte	0
 1381 035a 00       		.byte	0
 1382 035b 00       		.byte	0
 1383 035c 00       		.byte	0
 1384 035d 00       		.byte	0
 1385 035e 00       		.byte	0
 1386 035f 00       		.byte	0
 1387 0360 00       		.byte	0
 1388 0361 00       		.byte	0
 1389 0362 00       		.byte	0
 1390 0363 00       		.byte	0
 1391 0364 00       		.byte	0
 1392 0365 00       		.byte	0
 1393 0366 00       		.byte	0
 1394 0367 00       		.byte	0
 1395 0368 00       		.byte	0
 1396 0369 00       		.byte	0
 1397 036a 00       		.byte	0
 1398 036b 00       		.byte	0
 1399 036c 00       		.byte	0
 1400 036d 00       		.byte	0
 1401 036e 00       		.byte	0
 1402 036f 00       		.byte	0
 1403 0370 00       		.byte	0
 1404 0371 00       		.byte	0
 1405 0372 00       		.byte	0
 1406 0373 00       		.byte	0
 1407 0374 00       		.byte	0
 1408 0375 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 34


 1409 0376 00       		.byte	0
 1410 0377 00       		.byte	0
 1411 0378 00       		.byte	0
 1412 0379 00       		.byte	0
 1413 037a 00       		.byte	0
 1414 037b 00       		.byte	0
 1415 037c 00       		.byte	0
 1416 037d 00       		.byte	0
 1417 037e 00       		.byte	0
 1418 037f 00       		.byte	0
 1419 0380 00       		.byte	0
 1420 0381 00       		.byte	0
 1421 0382 00       		.byte	0
 1422 0383 00       		.byte	0
 1423 0384 00       		.byte	0
 1424 0385 00       		.byte	0
 1425 0386 00       		.byte	0
 1426 0387 00       		.byte	0
 1427 0388 00       		.byte	0
 1428 0389 00       		.byte	0
 1429 038a 00       		.byte	0
 1430 038b 00       		.byte	0
 1431 038c 00       		.byte	0
 1432 038d 03       		.byte	3
 1433 038e 03       		.byte	3
 1434 038f 03       		.byte	3
 1435 0390 00       		.byte	0
 1436 0391 00       		.byte	0
 1437 0392 00       		.byte	0
 1438 0393 00       		.byte	0
 1439 0394 00       		.byte	0
 1440 0395 00       		.byte	0
 1441 0396 03       		.byte	3
 1442 0397 03       		.byte	3
 1443 0398 03       		.byte	3
 1444 0399 03       		.byte	3
 1445 039a 1C       		.byte	28
 1446 039b 1C       		.byte	28
 1447 039c 1C       		.byte	28
 1448 039d 1C       		.byte	28
 1449 039e 1C       		.byte	28
 1450 039f 1C       		.byte	28
 1451 03a0 1C       		.byte	28
 1452 03a1 1C       		.byte	28
 1453 03a2 1C       		.byte	28
 1454 03a3 1C       		.byte	28
 1455 03a4 1C       		.byte	28
 1456 03a5 1C       		.byte	28
 1457 03a6 1C       		.byte	28
 1458 03a7 1C       		.byte	28
 1459 03a8 1C       		.byte	28
 1460 03a9 03       		.byte	3
 1461 03aa 03       		.byte	3
 1462 03ab 03       		.byte	3
 1463 03ac 03       		.byte	3
 1464 03ad 00       		.byte	0
 1465 03ae 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 35


 1466 03af 00       		.byte	0
 1467 03b0 00       		.byte	0
 1468 03b1 00       		.byte	0
 1469 03b2 00       		.byte	0
 1470 03b3 03       		.byte	3
 1471 03b4 03       		.byte	3
 1472 03b5 03       		.byte	3
 1473 03b6 00       		.byte	0
 1474 03b7 00       		.byte	0
 1475 03b8 00       		.byte	0
 1476 03b9 00       		.byte	0
 1477 03ba 00       		.byte	0
 1478 03bb 00       		.byte	0
 1479 03bc 00       		.byte	0
 1480 03bd 00       		.byte	0
 1481 03be 00       		.byte	0
 1482 03bf 00       		.byte	0
 1483 03c0 00       		.byte	0
 1484 03c1 00       		.byte	0
 1485 03c2 00       		.byte	0
 1486 03c3 00       		.byte	0
 1487 03c4 00       		.byte	0
 1488 03c5 00       		.byte	0
 1489 03c6 00       		.byte	0
 1490 03c7 00       		.byte	0
 1491 03c8 00       		.byte	0
 1492 03c9 00       		.byte	0
 1493 03ca 00       		.byte	0
 1494 03cb 00       		.byte	0
 1495 03cc 00       		.byte	0
 1496 03cd 00       		.byte	0
 1497 03ce 00       		.byte	0
 1498 03cf 00       		.byte	0
 1499 03d0 00       		.byte	0
 1500 03d1 00       		.byte	0
 1501 03d2 00       		.byte	0
 1502 03d3 00       		.byte	0
 1503 03d4 00       		.byte	0
 1504 03d5 00       		.byte	0
 1505 03d6 00       		.byte	0
 1506 03d7 00       		.byte	0
 1507 03d8 00       		.byte	0
 1508 03d9 00       		.byte	0
 1509 03da 00       		.byte	0
 1510 03db 00       		.byte	0
 1511 03dc 00       		.byte	0
 1512 03dd 00       		.byte	0
 1513 03de 00       		.byte	0
 1514 03df 00       		.byte	0
 1515 03e0 00       		.byte	0
 1516 03e1 00       		.byte	0
 1517 03e2 00       		.byte	0
 1518 03e3 00       		.byte	0
 1519 03e4 00       		.byte	0
 1520 03e5 00       		.byte	0
 1521 03e6 00       		.byte	0
 1522 03e7 00       		.byte	0
ARM GAS  /tmp/ccyX6l7N.s 			page 36


 1523 03e8 00       		.byte	0
 1524 03e9 00       		.byte	0
 1525 03ea 00       		.byte	0
 1526 03eb 00       		.byte	0
 1527 03ec 00       		.byte	0
 1528 03ed 00       		.byte	0
 1529 03ee 00       		.byte	0
 1530 03ef 00       		.byte	0
 1531 03f0 00       		.byte	0
 1532 03f1 00       		.byte	0
 1533 03f2 00       		.byte	0
 1534 03f3 00       		.byte	0
 1535 03f4 00       		.byte	0
 1536 03f5 00       		.byte	0
 1537 03f6 00       		.byte	0
 1538 03f7 00       		.byte	0
 1539 03f8 00       		.byte	0
 1540 03f9 00       		.byte	0
 1541 03fa 00       		.byte	0
 1542 03fb 00       		.byte	0
 1543 03fc 00       		.byte	0
 1544 03fd 00       		.byte	0
 1545 03fe 00       		.byte	0
 1546 03ff 00       		.byte	0
 1547              		.text
 1548              	.Letext0:
 1549              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 1550              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 1551              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 1552              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1553              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1554              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1555              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1556              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1557              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1558              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1559              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1560              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1561              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1562              		.file 16 "Core/Inc/oled.h"
 1563              		.file 17 "Core/Src/raine64.h"
 1564              		.file 18 "/usr/include/newlib/sys/lock.h"
 1565              		.file 19 "/usr/include/newlib/sys/_types.h"
 1566              		.file 20 "/usr/include/newlib/sys/reent.h"
ARM GAS  /tmp/ccyX6l7N.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccyX6l7N.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccyX6l7N.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccyX6l7N.s:73     .text.MX_GPIO_Init:0000000000000040 $d
     /tmp/ccyX6l7N.s:78     .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccyX6l7N.s:85     .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccyX6l7N.s:159    .text.USART1_IRQHandler:0000000000000054 $d
                            *COM*:0000000000000400 img_buffer
     /tmp/ccyX6l7N.s:166    .text.Error_Handler:0000000000000000 $t
     /tmp/ccyX6l7N.s:173    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccyX6l7N.s:199    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccyX6l7N.s:205    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccyX6l7N.s:251    .text.MX_I2C1_Init:000000000000002c $d
                            *COM*:0000000000000054 hi2c1
     /tmp/ccyX6l7N.s:258    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccyX6l7N.s:264    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccyX6l7N.s:308    .text.MX_USART1_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart1
     /tmp/ccyX6l7N.s:314    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccyX6l7N.s:321    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccyX6l7N.s:408    .text.main:0000000000000000 $t
     /tmp/ccyX6l7N.s:415    .text.main:0000000000000000 main
     /tmp/ccyX6l7N.s:500    .text.main:0000000000000060 $d
     /tmp/ccyX6l7N.s:522    .data.raine:0000000000000000 raine
     /tmp/ccyX6l7N.s:511    .bss.idx.6166:0000000000000000 $d
     /tmp/ccyX6l7N.s:515    .bss.idx.6166:0000000000000000 idx.6166
     /tmp/ccyX6l7N.s:518    .data.raine:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
write_data_oled
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
initOled
memcpy
